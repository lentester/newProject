{"EDITOR_STATE":{"allProjectFiles":{"c1dab5c5-75bd-49a7-ade0-e07292672aed":{"id":"c1dab5c5-75bd-49a7-ade0-e07292672aed","parent":null,"name":"newProject","type":"DIRECTORY","isDirectory":true,"children":["4232cf3b-1328-4c66-a02d-d4b2cff30881"],"isRemovable":false,"filePath":"newProject"},"4232cf3b-1328-4c66-a02d-d4b2cff30881":{"id":"4232cf3b-1328-4c66-a02d-d4b2cff30881","parent":"c1dab5c5-75bd-49a7-ade0-e07292672aed","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"newProject/lambda.js","code":"let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\nexports.handler = function (event, context, callback) {\n\tddb.get({\n\t\tTableName: 'foo',\n\t\tKey: { 'bla': 'blie' }\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\t//handle error\n\t\t} else {\n\t\t\t//your logic goes here\n\t\t}\n\t});\n\n\n\tcallback(null, 'Successfully executed');\n}","triggers":[],"version":3}},"rootNode":"c1dab5c5-75bd-49a7-ade0-e07292672aed","openFiles":["4232cf3b-1328-4c66-a02d-d4b2cff30881"],"currentFileId":"4232cf3b-1328-4c66-a02d-d4b2cff30881","resources":{"ddbfoo":{"name":"ddbfoo","type":"DynamoDB","config":{"mode":0,"operation":"get","table":{"arn":"","name":"foo","partitionKey":"bla","partitionKeyType":"S","hasSortKey":false,"sortKey":"","sortKeyType":"S","mode":0},"parameters":{"Key":{"bla":"blie"},"Item":{},"ExpressionAttributeValues":{}},"validator":{"validatableFields":{},"validity":true},"valid":true},"globallyEditable":false}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":"","editable":false}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"}}},"lambdaId":"4232cf3b-1328-4c66-a02d-d4b2cff30881","additionalFiles":[]},"PROJECT_META":{"projectName":"newProject","projectDescription":"","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"newProject","repoUrl":"https://github.com/lentester/newProject","lastSave":1523521818690}}